{
	"name": "qsharp",
	"scopeName": "source.qsharp",
	"fileTypes": [
		"qs"
	],
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#library"
		},
		{
			"include": "#operations"
		},
		{
			"include": "#types"
		},
		{
			"include": "#constants"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#callable"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.double-slash",
					"match": "\\/\\/.*$"
				},
				{
					"name": "comment.documentation",
					"match": "\\/\\/\\/.*$"
				}
			]
		},
		"operations": {
			"patterns": [
				{
					"name": "keyword.other.qsharp",
					"match": "\\b(namespace|open|as|internal|newtype|operation|function|body|(a|A)djoint|(c|C)ontrolled|self|auto|distribute|invert|intrinsic)\\b"
				}
			]
		},
		"types": {
			"patterns": [
				{
					"name": "storage.type.qsharp",
					"match": "\\b(Int|BigInt|Double|Bool|Qubit|Pauli|Result|Range|String|Unit|Ctl|Adj|is)\\b"
				}
			]
		},
		"library": {
			"patterns": [
				{
					"name": "support.function.quantum.qsharp",
					"match": "\\b(I|X|Y|Z|H|HY|S|T|SWAP|CNOT|CCNOT|MultiX|R|RFrac|Rx|Ry|Rz|R1|R1Frac|Exp|ExpFrac|Measure|M|MultiM)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.qsharp",
					"match": "\\b(true|false|Pauli(I|X|Y|Z)|One|Zero)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.qsharp",
					"begin": "(\\$|)\"",
					"end": "\"",
					"patterns": [
						{
							"name": "constant.character.escape.qsharp",
							"match": "\\\\."
						}
					]
				}
			]
		},
		"callable": {
			"begin": "(?x)\n(?:(\\.)\\s*)?                                        # preceding dot?\n([_[:alpha:]][_[:alnum:]]*)\\s*                      # callable name\n(?<type_args>\\s*<([^<>]|\\g<type_args>)+>\\s*)?\\s*    # type arguments\n(?=\\()                                              # open parentheses of argument list",
			"beginCaptures": {
				"1": {
					"name": "punctuation.accessor.qsharp"
				},
				"2": {
					"name": "entity.name.callable.qsharp"
				},
				"3": {
					"patterns": [
						{
							"include": "#type-parameter-list"
						}
					]
				}
			},
			"end": "(?<=\\))",
			"patterns": [
				{
					"include": "#callable"
				},
				{
					"include": "#strings"
				},
				{
					"include": "#constants"
				},
				{
					"include": "#types"
				},
				{
					"include": "#library"
				}
			]
		},
		"type-parameter-list": {
			"begin": "\\<",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.typeparameters.begin.qsharp"
				}
			},
			"end": "\\>",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.typeparameters.end.qsharp"
				}
			},
			"patterns": [
				{
					"match": "(@?'[_[:alpha:]][_[:alnum:]]*)\\b",
					"captures": {
						"1": {
							"name": "entity.name.type.type-parameter.qsharp"
						}
					}
				},
				{
					"include": "#punctuation-comma"
				}
			]
		},
		"punctuation-comma": {
			"name": "punctuation.separator.comma.qs",
			"match": ","
		}
	}
}